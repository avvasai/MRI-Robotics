%function [petri_center,petri_radius] = findPetri(current_frame)
% Function used to locate the petri dish

    current_frame = imread("snapshot3.png") %comment this out when you have to run the actual code
    image = current_frame;
    imshow(image);
    %To find the pixel length of the petri for claibration
     %d = drawline;
     %pos = d.Position;
     %diffPos = diff(pos);
     %dia = hypot(diffPos(1),diffPos(2));
      dia = 932.5495;
      dia1 = round((dia -50)/2 - 241);
      dia2 = round((dia+50)/2);
    % TODO: use im2bw to threshold the image and convert it to binary image
    % you wll use the circle with maximum radius as the petri dish
    %Calculating the graythresh hold using Otsu's method
        %level = graythresh(image)
        %level = 0.3;
    %Converting the image from colour to BW using averaged greyscale level
        %image_white = im2bw(image,level);
    %Alternative method to convert to black and white
    image_white = imbinarize(image,'adaptive');
    imshow(image_white);
   

    %Finding the circle with a radius r pixels("Need to ask regarding which dimensions to use")
    [centers,radii] = imfindcircles(image_white,[10 dia2],Sensitivity=0.92,Method="TwoStage")
    %Finding the 10 max radii in the array of radii
    temp_radii = sort(radii,'descend');
    temp_radii= temp_radii(1:20);
    for i = 1:length(temp_radii)
         trow = 0;
         trow = find(radii==temp_radii(i))
         temp_index= trow(1)
    end
    temp_index = temp_index';
    centersStrong5 = centers(1:temp_index,:); 
    radiiStrong5 = radii(1:temp_index);
    %viscircles(centers, radii,'EdgeColor','b');
%     
   % k_max =  (radii == max(radii));
   % petri_center = centers(k_max,:);
   % petri_radius = radii(k_max);
    

%end

